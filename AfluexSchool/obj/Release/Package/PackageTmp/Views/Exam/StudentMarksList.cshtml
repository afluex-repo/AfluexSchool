@model AfluexSchool.Models.Exam

@{
    ViewBag.Title = "StudentMarksList";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

 @using (Html.BeginForm("StudentMarksList", "Exam", FormMethod.Post, new { @id = "form1", enctype = "multipart/form-data" }))
 {
    <div class="container-fluid">
        <div class="row page-titles mx-0">
            <div class="col-sm-6 p-md-0">
                <div class="welcome-text">
                    <h3><b>Student Marks List</b></h3>
                </div>
            </div>
            <div class="col-sm-6 p-md-0 justify-content-sm-end mt-2 mt-sm-0 d-flex">
                <ol class="breadcrumb">
                    <li class="breadcrumb-item"><a href="javascript:void(0)">Exam</a></li>
                    <li class="breadcrumb-item active"><a href="javascript:void(0)">Student Marks List</a></li>
                </ol>
            </div>
        </div>
        <div class="card shadow">
            <div class="card-body">
                @*<p style="color:red">
                    @TempData["LeaveList"]
                </p>*@
                <form>
                    <div class="form-row">
                        <div class="form-group col-md-3">
                            <label>Class</label>
                            @Html.DropDownListFor(m => m.Fk_ClassID, new SelectList(ViewBag.ddlClass, "Value", "Text"), new { @class = "form-control", @onchange = "return GetSectionByClass();" })
                            @Html.HiddenFor(m => m.Pk_StudentMarksId)
                        </div>
                        <div class="form-group  col-md-3">
                            <label>Section</label>
                            @Html.DropDownListFor(m => m.Fk_SectionId, new SelectList(ViewBag.ddlsection, "Value", "Text"), new { @class = "form-control", @onchange = "return GetSubjectNameBySection ();" })
                        </div>
                        <div class="form-group col-md-3">
                            <label>Subject</label>
                            @Html.DropDownListFor(m => m.SubjectID, new SelectList(ViewBag.ddlSubjectName, "Value", "Text"), new { @class = "form-control" })
                        </div>
                        <div class="form-group col-md-3">
                            <label>Exam type</label>
                            @Html.DropDownListFor(m => m.ExamTypeName, new SelectList(ViewBag.ddlExamType, "Value", "Text"), new { @class = "form-control" })
                        </div>
                        <div class="form-group col-md-3">
                            <input class="btn btn-primary" type="submit" name="Search" value="Get Detail" id="btndetail" />
                        </div>
                    </div>
                </form>

                <div class="table-responsive mt-3">
                    <table id="example5" class="display table" style="min-width:845px">
                        <thead>
                            <tr>
                                <th>S No.</th>
                                <th>StudentName</th>
                                <th>Class</th>
                                <th>Section</th>
                                <th>Subject</th>
                                <th>Exam Type</th>
                                <th>Maximum Marks</th>
                                <th>Obtain Marks</th>
                            </tr>
                        </thead>
                        <tbody>
                            @if (Model != null)
                            {
                                if (Model.lststudent != null)
                                {
                                    int i = 1;
                                    foreach (var item in Model.lststudent)
                                    {
                                        <tr>
                                            <td>@i</td>
                                            <td> @item.StudentName</td>
                                            <td> @item.ClassName</td>
                                            <td> @item.SectionName</td>
                                            <td> @item.SubjectName</td>
                                            <td> @item.ExamTypeName</td>
                                            <td> @item.MaxMarks  </td>
                                            <td><b>@item.ObtainedMarks</b></td>
                                        </tr>
                                        i++;
                                    }
                                }
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>

 }

<script>
    

    function GetSectionByClass() {
        var value = $('#Fk_ClassID').val();
        //var values = $('#SectionName').val();
        //alert(value);
        $.ajax({
            url: "/Exam/GetSectionByClass",
            Type: "Get",
            DataType: "JSON",
            data: { Fk_ClassID: value },
            success: function (data) {

                $("#Fk_SectionId").html(""); // clear before appending new list
                $("#Fk_SectionId").empty();
                $("#Fk_SectionId").append(
                      $('<option></option>').val(0).html('--Select Section--'));
                $.each(data.ddlsection, function (index, Sectioncount) {
                    $("#Fk_SectionId").append(
                          $('<option></option>').val(Sectioncount.Value).html(Sectioncount.Text));

                });


            }
        });

    }

    function GetSubjectNameBySection() {
        var value = $('#Fk_SectionId').val();
        var values = $('#Fk_ClassID').val();
        //alert(value);
        $.ajax({
            url: "/Exam/GetSubjectNameBySection",
            Type: "Get",
            DataType: "JSON",
            data: { Fk_SectionId: value, Fk_ClassID: values },
            success: function (data) {

                $("#SubjectID").html(""); // clear before appending new list
                $("#SubjectID").empty();
                $("#SubjectID").append(
                      $('<option></option>').val(0).html('--Select Subject Name--'));
                $.each(data.ddlSubjectName, function (index, Sectioncount) {
                    $("#SubjectID").append(
                          $('<option></option>').val(Sectioncount.Value).html(Sectioncount.Text));

                });

            }
        });

    }

    function validateMarks(marks) {
        var test1 = marks.id;
        var test = $('#' + test1 + '').val();
        var maxMarks = $('#MaxMarks').val();
        var obtMarks = marks.value;

        if ((Number)(obtMarks) > (Number)(maxMarks)) {


            alert('Please Enter Right Marks');
            return false;

        }
    }

    function isNumberKey(evt) {

        var charCode = (evt.which) ? evt.which : event.keyCode;
        if (charCode != 46 && charCode > 31
          && (charCode < 48 || charCode > 57))
            return false;

        return true;
    }
</script>


