@model AfluexSchool.Models.Teacher

@{
    ViewBag.Title = "Teacher";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<style>
    .errortext{
        border:1px solid red!important;
        background-color:#ffc4c4!important;
    }
</style>

@using (Html.BeginForm("Teacher", "Teacher", FormMethod.Post, new { @id = "form1", enctype = "multipart/form-data" }))
{
    <div class="container-fluid">
        <div class="row page-titles mx-0">
            <div class="col-sm-6 p-md-0">
                <div class="welcome-text">
                    <h3><b>Teacher Registration</b></h3>
                </div>
            </div>
            <div class="col-sm-6 p-md-0 justify-content-sm-end mt-2 mt-sm-0 d-flex">
                <ol class="breadcrumb">
                    <li class="breadcrumb-item"><a href="javascript:void(0)">Teacher</a></li>
                    <li class="breadcrumb-item active"><a href="javascript:void(0)">Teacher Registration</a></li>
                </ol>
            </div>
        </div>
        <div class="card shadow">
            <div class="card-body">
                <p style="color:red">
                   @TempData["Teacher"]
                </p>
                <form>
                    <div class="form-row">
                        <div class="form-group col-md-3">
                            <label>Branch<span style="color: red">*</span></label>
                            @Html.DropDownListFor(q => q.BranchName, new SelectList(ViewBag.ddlBranch, "Value", "Text"), new { @class = "form-control" })
                            @Html.HiddenFor(q => q.ActionType)
                        </div>
                        <div class="form-group  col-md-3">
                            <label>Name<span style="color: red">*</span></label>
                            @Html.TextBoxFor(a => a.Name, new { @class = "form-control", @Placeholder = "Name" })
                        </div>
                        <div class="form-group col-md-3">
                            <label>Father Name<span style="color: red">*</span></label>
                            @Html.TextBoxFor(b => b.FatherName, new { @Class = "form-control", @Placeholder = "FatherName" })
                        </div>
                        <div class="form-group col-md-3">
                            <label>DOB<span style="color: red">*</span></label>
                            @Html.TextBoxFor(f => f.DOB, new { @class = "form-control", @Placeholder = "Date Of Birth", @ReadOnly = "ReadOnly", @onchange = "return ageCount();" })
                        </div>
                        <div class="form-group col-md-3">
                            <label>Gender<span style="color: red">*</span></label>
                            @Html.DropDownListFor(m => m.Gender, new SelectList(ViewBag.ddlGender, "Value", "Text"), new { @class = "form-control" })
                        </div>
                        <div class="form-group col-md-3">
                            <label>Category<span style="color: red">*</span></label>
                            @Html.DropDownListFor(m => m.Category, new SelectList(ViewBag.ddlCategory, "Value", "Text"), new { @class = "form-control" })
                        </div>
                        <div class="form-group col-md-3">
                            <label>Religion<span style="color: red">*</span></label>
                            @Html.DropDownListFor(q => q.Religion, new SelectList(ViewBag.ddlReligion, "Value", "Text"), new { @class = "form-control" })
                        </div>
                        <div class="form-group col-md-3">
                            <label>Qualification<span style="color: red">*</span></label>
                            @Html.TextBoxFor(m => m.Qualification, new { @class = "form-control", @Placeholder = "Qualification" })
                        </div>
                        <div class="form-group col-md-3">
                                <label>Experience </label>
                                @Html.TextBoxFor(o => o.Experience, new { @class = "form-control", @Placeholder = "Experience" })
                        </div>
                        <div class="form-group col-md-3">
                                <label>Last School </label>
                                @Html.TextBoxFor(m => m.LastSchool, new { @class = "form-control", @Placeholder = "   Last School" })
                        </div>
                        <div class="form-group col-md-3">
                                <label>Last Experience  </label>
                                @Html.TextBoxFor(o => o.LastExperience, new { @class = "form-control", @Placeholder = "Last Experience" })
                        </div>
                        <div class="form-group col-md-3">
                                <label>Date of Joining  <span style="color: red">*</span></label>
                                @Html.TextBoxFor(l => l.DOJ, new { @class = "form-control", @Placeholder = "Date Of Joining", @ReadOnly = "ReadOnly" })
                        </div>
                        <div class="form-group col-md-3">
                                <label>Address<span style="color: red">*</span></label>
                                @Html.TextAreaFor(c => c.Address, new { @class = "form-control", @Placeholder = "Address", @cols = "30", row = "10" })
                        </div>
                        <div class="form-group col-md-3">
                                <label>Pincode<span style="color: red">*</span></label>
                                @Html.TextBoxFor(d => d.PinCode, new { @class = "form-control", @Placeholder = "Pincode", @OnChange = "return GetstatecityBypincode();", @onkeypress = "return isNumberKey(event);", @maxlength = "6" })
                        </div>
                        <div class="form-group col-md-3">
                                <label>State</label>
                                @Html.TextBoxFor(d => d.State, new { @class = "form-control", @Placeholder = "State", @ReadOnly = "ReadOnly" })
                        </div>
                        <div class="form-group col-md-3">
                                <label>City<span style="color: red">*</span></label>
                                @Html.TextBoxFor(d => d.City, new { @class = "form-control", @Placeholder = "City", @ReadOnly = "ReadOnly" })
                        </div>
                        <div class="form-group col-md-3">
                                <label>Mobile No. <span style="color: red">*</span></label>
                                @Html.TextBoxFor(e => e.MobileNo, new { @class = "form-control", @Placeholder = "MobileNo.", @maxlength = "10", @onkeypress = "return isNumberKey(event);" })
                        </div>
                        <div class="form-group col-md-3">
                                <label>Email Id <span style="color: red">*</span></label>
                                @Html.TextBoxFor(o => o.EmailID, new { @class = "form-control", @Placeholder = "Email ID" })
                        </div>
                        <div class="form-group col-md-3">
                                <label>Profile Pic </label>
                                @Html.HiddenFor(r => r.PK_TeacherID)
                                <input type="file" name="Image" class="bg-default form-control" id="Image" />
                        </div>
                        <div class="form-group col-md-4">
                            @if (Model.PK_TeacherID != null)
                            {
                                <input type="submit" class="btn btn-success" onclick="return validateform();" name="btnUpdate" id="btnUpdate" value="Update" />
                            }
                            else
                            {
                                <input type="submit" class="btn btn-success" onclick="return validateform();" name="btnSave" id="btnSave" value="Save" />
                            }
                        </div>
                    </div>
                </form>
            </div>
        </div>
    </div>

}

<script src="../../scripts/jquery-1.10.2.min.js"></script>


<script src="//code.jquery.com/ui/1.11.4/jquery-ui.js"></script>
<link rel="stylesheet" type="text/css" href="https://code.jquery.com/ui/1.12.0/themes/smoothness/jquery-ui.css">



<script>



    function ageCount() {
        var date1 = new Date();
        var dob = document.getElementById("DOB").value;
        var date2 = new Date(dob);
        var pattern = /^(\d{1,2})(\/|-)(\d{1,2})(\/|-)(\d{4})$/;
        if (pattern.test(dob)) {
            var y1 = date1.getFullYear();
            var y2 = date2.getFullYear();
            var age = y1 - y2;
            if (age < 18) {
                alert("age must be greater then 18 years ..!");
                document.getElementById("DOB").value = "";
            }
            else {

                return false;
            }

        }
        else {
            alert("Invald date format.Please Input in(MM/DD/YYYY)format !");
            document.getElementById("DOB").value = "";
            return false;
        }

    }

    $('#DOB').datepicker({
        dateFormat: 'dd/mm/yy',
        changeMonth: true,
        changeYear: true,
       
        currentyear: false,
        yearRange: "1942:2030"


    });

    $('#DOJ').datepicker({
        dateFormat: 'dd/mm/yy',
        changeMonth: true,
        changeYear: true,
        currentyear: true,
         
        maxDate: '0',
    }
     );

    function GetstatecityBypincode() {

        var value = $('#PinCode').val();

        $.ajax({
            url: '/Teacher/GetStateCityByPincode', type: 'post', dataType: 'json',
            data: { 'PinCode': value }, success: function (data) {
                if (data.Result == "Yes") {
                    $('#State').val(data.State);
                    $('#City').val(data.City);


                }
                else {
                    alert("Invalid PIn");
                    $('#pincode').val('');
                    $('#State').val('');
                    $('#City').val('');

                }
            }

        });

    }

    function validateform() {
        $(".errortext").removeClass("errortext");

        if ($('#BranchName').val() == '0') {
            $("#BranchName").addClass('errortext');
            $('#BranchName').focus();
            return false;
        }



        if ($('#Name').val() == '') {
            $("#Name").addClass('errortext');
            $('#Name').focus();
            return false;
        }
        if ($('#FatherName').val() == '') {
            $("#FatherName").addClass('errortext');
            $('#FatherName').focus();
            return false;
        }
        if ($('#DOB').val() == '') {
            $("#DOB").addClass('errortext');
            $('#DOB').focus();
            return false;
        }

        if ($('#Gender').val() == '0') {
            $("#Gender").addClass('errortext');
            $('#Gender').focus();
            return false;
        }


        if ($('#Category').val() == '0') {
            $("#Category").addClass('errortext');
            $('#Category').focus();
            return false;
        }
        if ($('#Religion').val() == '0') {
            $("#Religion").addClass('errortext');
            $('#Religion').focus();
            return false;
        }

        if ($('#Qualification').val() == '') {
            $("#Qualification").addClass('errortext');
            $('#Qualification').focus();
            return false;
        }

        if ($('#DOJ').val() == '') {
            $("#DOJ").addClass('errortext');
            $('#DOJ').focus();
            return false;
        }

        if ($('#Address').val() == '') {
            $("#Address").addClass('errortext');
            $('#Address').focus();
            return false;
        }
        if ($('#PinCode').val() == '') {
            $("#PinCode").addClass('errortext');
            $('#PinCode').focus();
            return false;
        }

        if ($('#MobileNo').val() == '') {
            $("#MobileNo").addClass('errortext');
            $('#MobileNo').focus();
            return false;
        }



        if ($('#EmailID').val() == '') {
            $("#EmailID").addClass('errortext');
            $('#EmailID').focus();
            return false;
        }


        return true;
    }

    function isNumberKey(evt) {
        var charCode = (evt.which) ? evt.which : event.keyCode;
        if (charCode != 46 && charCode > 31
          && (charCode < 48 || charCode > 57))
            return false;

        return true;
    }

    function ViewInformation() {
        $("#BranchName").attr("disabled", "disabled");
        $("#DesignationName").attr("disabled", "disabled");
        $("#Name").attr("readonly", "readonly");
        $("#FatherName").attr("readonly", "readonly");
        $("#DOB").attr("disabled", "disabled");
        $("#Gender").attr("disabled", "disabled");
        $("#Category").attr("disabled", "disabled");
        $("#Religion").attr("disabled", "disabled");
        $("#Qualification").attr("readonly", "readonly");
        $("#Experience").attr("readonly", "readonly");
        $("#LastSchool").attr("readonly", "readonly");
        $("#LastExperience").attr("readonly", "readonly");
        $("#Address").attr("readonly", "readonly");
        $("#PinCode").attr("readonly", "readonly");
        $("#MobileNo").attr("readonly", "readonly");
        $("#DOJ").attr("readonly", "readonly");
        $("#Image").attr("readonly", "readonly");
        $("#EmailID").attr("readonly", "readonly");
        $('#btnUpdate').hide();
        $('#btnSave').hide();
        $('#btnView').hide();
    }

</script>

